{"componentChunkName":"component---src-templates-blog-post-js","path":"/HTML/HTML5ForWEbDesigners/4/","result":{"data":{"site":{"siteMetadata":{"title":"DEV LOGS"}},"markdownRemark":{"id":"cc38d851-294f-53e4-9bd6-918b32e7ae5a","excerpt":"반응형 이미지 picture, srcset요소를 통해 반응형 이미지를 만들 수 있다.  기존의 문제점, 모든 기기에서 같은 이미지를 다운로드한다. \n두번째 문제점, 기기에 따라 크기와 형식이 맞지 않을 수 있다. '''html\n css…","html":"<h2>반응형 이미지</h2>\n<p>picture, srcset요소를 통해 반응형 이미지를 만들 수 있다. </p>\n<p>기존의 문제점, 모든 기기에서 같은 이미지를 다운로드한다.\n두번째 문제점, 기기에 따라 크기와 형식이 맞지 않을 수 있다.</p>\n<p>'''html\n<picture></p>\n  <source media=\"(min-width: 1024px)\" srcset=\"fullsize.jpg\">\n  <img src=\"crop.jpg\" alt=\"myImage\">\n</picture>\n'''\n<p>css에서 미디어 쿼리를 지정해주는 방법과 동일하다.\npicture를 지원하지 않는 브라우져에서는 마지막 img 요소가 출력된다.</p>\n<p>srcset요소를 활용하면 화면에 해상도에 따라, 또는 크기에 따라 다르게 출력될 수 있다. </p>\n<h2>canvas</h2>\n<p>동적인 이미지를 만들 수 있는 환경을 제공합니다.\n이론상으로는 일러스트레이터와 같은 프로그램에서 그릴 수 있는 모든 이미지들을 만들 수 있다. </p>\n<p>그러나 canvas의 핵심은 사용자가 발생시킨 이벤트에 반응할 수 있는 기능을 이용하여\n플래시 등의 플러그인 없이는 만들 수 없었던 도구나 게임등을 만들 수 있게 되었습니다. </p>\n<h2>svg</h2>\n<p>1999년 부터 존재해왔던 개방형 표준, canvas와 비슷한 일을 함\ncanvas와 달리 벡터방식이고, xml을 이용하므로 보다 더 읽기 쉽다. </p>\n<h2>오디오</h2>\n<p>자동으로 재생되는 오디오 파일을 삽입하는 것은 무례하고 어리석은 일이다. </p>\n<p>'''html\n<audio src=\"aaa.mp3\" autoplay>\n<audio src=\"aaa.mp3\" autoplay loop>\n'''</p>\n<p>버퍼링 </p>\n<p>autobuffer 속성은 preload속성으로 대체되었다.</p>\n<p>'''\n<audio src=\"aaa.mp3\" controls preload=\"none\">\n'''</p>\n<p>파일 형식</p>\n<p>파일 형식별로 브라우져에 지원현황이 다를 수 있다.\n각 브라우져에 맞게 지원하는 파일 형식의 파일을 다운로드 할 수 있도록 하려면\naudio > source의 type속성을 지정해주면 된다. </p>\n<p>대체 콘텐츠</p>\n<p>object 요소를 활용해서 아주 오래된 브라우져를 지원할 수도 있다. </p>\n<h2>비디오</h2>\n<p>오디오 형식과 비슷하나 영역을 지정해주어야 한다.\n비디오 요소는 직접 스크립트로 제어할 수 있을뿐만 아니라. 페이지 배경으로도 사용할 수 있습니다. </p>\n<h2>WebVTT</h2>\n<p>비디오 콘텐츠에 자막을 넣을 수 있다. </p>","frontmatter":{"title":"3 - 리치 미디어","date":null,"description":null}}},"pageContext":{"slug":"/HTML/HTML5ForWEbDesigners/4/","previous":{"fields":{"slug":"/HTML/HTML5ForWEbDesigners/7/"},"frontmatter":{"title":"6 - 지금 HTML5를 사용하려면"}},"next":{"fields":{"slug":"/FP/FPinJS/4/"},"frontmatter":{"title":"CHAPTER 3 - 자료구조는 적게, 일은 더 많이"}}}}}