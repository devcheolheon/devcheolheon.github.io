{"componentChunkName":"component---src-templates-blog-post-js","path":"/HTML/HTML5ForWebDesigners/6/","result":{"data":{"site":{"siteMetadata":{"title":"DEV LOGS"}},"markdownRemark":{"id":"97ea387c-c9bc-5682-afd6-03bc15a59668","excerpt":"새로운 마크업 요소 인라인 요소 mark 검색결과 내애서 검색어를 도드라져 보이게 하고 싶을때 time 시간값을 컴퓨터도 알아볼 수 있게 입력  meter 측정값이 최대 최소값의 범위를 가지고 있을때 나타냄 progress 계속 변화되는 값을 나타낼때  구조 section div…","html":"<h2>새로운 마크업 요소</h2>\n<h3>인라인 요소</h3>\n<ul>\n<li>mark</li>\n</ul>\n<p>검색결과 내애서 검색어를 도드라져 보이게 하고 싶을때</p>\n<ul>\n<li>time</li>\n</ul>\n<p>시간값을 컴퓨터도 알아볼 수 있게 입력 </p>\n<ul>\n<li>meter</li>\n</ul>\n<p>측정값이 최대 최소값의 범위를 가지고 있을때 나타냄</p>\n<ul>\n<li>progress</li>\n</ul>\n<p>계속 변화되는 값을 나타낼때 </p>\n<h3>구조</h3>\n<h4>section</h4>\n<p>div와 달리 연관된 콘텐츠를 묶어주기 위해 명시적으로 사용함 </p>\n<ul>\n<li>영역의 주제를 드러낼 제목이 떠오르지 않는다면 div</li>\n<li>콘텐츠 영역을 독립적으로 배포할 수 있는 경우는 article</li>\n</ul>\n<h4>header</h4>\n<p>사이트 설명이나 탐색에 도움이 되는 요소\n(section안에는 대체로 header가 있어야 함)\n꼭 최상단일 필요는 없음</p>\n<h4>footer</h4>\n<p>페이지를 만든 사람, 저작권 정보, 연관된 콘텐츠에 대한 링크 등과 같은\n정보를 포함함</p>\n<p>HTML5에서는 영역마다 (section) footer 요소를 쓸수 있다. </p>\n<h4>aside</h4>\n<p>본문과 별 관련이 없는 콘텐츠, 본문 콘텐츠의 주된 흐름에 영향을 주지 않는 콘텐츠</p>\n<p>article안에 포함된 경우에는 기사의 발췌문과 같이 직접 본문과 연관된 콘텐츠를 포함해야 함</p>\n<h4>nav</h4>\n<p>주요 탐색 정보, 페이지 전반에 걸쳐 중요한 탐색 정보 </p>\n<p>주로 header안에 들어있음</p>\n<h4>article</h4>\n<p>독립적으로 쓸 수 있는 콘텐츠 ( rss피드로 보낸다면? )</p>\n<p>time요소를 article내에 사용할 경우 선택적으로 pubdate 속성을 추가해 발행일이 포함되어 있음을\n나타낼 수 있다. </p>\n<p>주식시세 계산기, 시계 날씨 등에 단독을 쓸수 있는 위젯은\narticle요소를 사용하도록 정의하고 있다. </p>\n<p>section안에 article article안에 여러 section을 포함하는 등\n저자가 결정하기 나름이다. </p>\n<h3>개요 알고리즘</h3>\n<p>섹션으로 나눈 콘텐츠마다 각자 독립적인 개요를 가집니다. </p>\n<p>섹션마다 새로운 제목을 h1부터 작성할 수 있다. </p>\n<h4>섹션화 루트</h4>\n<p>어떤 부분의 제목은 문서의 개요에 나타나지 않는다. </p>\n<p>blockquote, fieldset, td 요소들이 이런 아웃라인 알고리즘에 포함되지 않는다</p>\n<p>이들을 섹션화루트라고 부른다.</p>\n<h4>이식성</h4>\n<style scoped> scoped 속성을 이용하면, 그 style요소를 포함하는 \n영역의 콘텐츠에만 해당 스타일이 적용된다. \n\n\n\n\n\n\n","frontmatter":{"title":"CHAPTER 5 - HTML 의미론","date":null,"description":null}}},"pageContext":{"slug":"/HTML/HTML5ForWebDesigners/6/","previous":{"fields":{"slug":"/FP/FPinJS/5/"},"frontmatter":{"title":"CHAPTER 4 - 재사용 가능한, 모듈적인 코드로"}},"next":{"fields":{"slug":"/HTML/HTML5ForWebDesigners/5/"},"frontmatter":{"title":"CHAPTER 4 - WEB FORMS 2.0"}}}}}