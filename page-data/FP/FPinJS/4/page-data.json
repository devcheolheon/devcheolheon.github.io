{"componentChunkName":"component---src-templates-blog-post-js","path":"/FP/FPinJS/4/","result":{"data":{"site":{"siteMetadata":{"title":"DEV LOGS"}},"markdownRemark":{"id":"f4ce54bd-d54b-5f40-8376-bbea4c067cd5","excerpt":"로대시 JS…","html":"<ul>\n<li>로대시 JS의 사용법, 함수형 프로그래밍에서 재귀가 차지하는 막대한 비중</li>\n<li>자료구조 파싱은 소프트웨어에서 가장 기본적인 작업이자 함수형 프로그래밍의 주특기이기도 합니다.</li>\n</ul>\n<h3>재귀란 ?</h3>\n<p>재귀는 주어진 문제를 자기 반복적인 문제들로 잘게 분해한 다음, 이들을 다시 조합해 원래 문제의 정답을 찾는 기법입니다.</p>\n<p>기저 케이스 - base case\n재귀 케이스 - recursive case</p>\n<p>입력 집합이 최초 입력 집합보다 점점 작아져야 합니다.</p>","frontmatter":{"title":"CHAPTER 3 - 자료구조는 적게, 일은 더 많이","date":null,"description":null}}},"pageContext":{"slug":"/FP/FPinJS/4/","previous":{"fields":{"slug":"/FP/FPinJS/2/"},"frontmatter":{"title":"CHAPTER 1 - 함수형 길들이기"}},"next":{"fields":{"slug":"/FP/FPinJS/1/"},"frontmatter":{"title":"목차"}}}}}